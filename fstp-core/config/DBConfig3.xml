<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd 
        http://www.springframework.org/schema/data/repository 
   	    http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd"
       default-lazy-init="true">
    
    <!-- 如果spring用了jpa，并且类型为LocalContainerEntityManagerFactoryBean，则组件注册在此配置文件出现即可，其余配置文件可忽略
           使用component来替代annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入\ -->
    <context:annotation-config />
    <context:component-scan base-package="com.cicc.db.test"/>
 
     <!--数据源-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="url" value="jdbc:mysql://localhost:3306/pilot"/>
        <property name="username" value="root"/>
        <property name="password" value="jianghan"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    </bean>
    
    <!-- 定义实体管理器工厂Jpa配置   LocalContainerEntityManagerFactoryBean这个选项Spring扮演了容器的角色。完全掌管JPA -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
           <!-- 指定数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 指定Jpa持久化实现厂商类,这里以Hibernate为例 -->
        <property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<property name="packagesToScan" value="com.cicc.db.test"/>
        <!--  <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>-->
        <!--<property name="persistenceXmlLocation" value="META-INF/persistence.xml"/>-->
        <!--<property name="persistenceUnitName" value="rds-persistence"/>-->
        <property name="jpaProperties">
			<props>
				<!-- 生成的数据表的列的映射策略 -->
				<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
				<!-- hibernate 基本属性 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
    </bean>
   
    <!-- Jpa 事务管理器  -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 开启注解事务 -->
    <!--  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />-->
	<tx:annotation-driven transaction-manager="transactionManager"/>

    <jpa:repositories base-package="com.cicc.db.test"  transaction-manager-ref="transactionManager" entity-manager-factory-ref="entityManagerFactory"/>
    
    <!-- 启动对@AspectJ（面向切面）注解的支持 --> 
    <!--<aop:aspectj-autoproxy />-->
    <!--
    <aop:config>
    	<aop:pointcut id="daoPointCut" expression="execution(* yitian.study.dao.*.*(..))"/>
    	<aop:advisor advice-ref="transactionAdvice" pointcut-ref="daoPointCut"/>
	</aop:config>
	-->
</beans>